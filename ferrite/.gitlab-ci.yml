image: agerasev/debian-psc

cache:
  paths:
    - target/download
    - target/epics_base_*

stages:
  - epics_base.clone
  - epics_base.build_host
  - app_toolchain.download
  - epics_base.build_cross
  - app.build_fakedev
  - mcu_toolchain.download
  - freertos.clone
  - app.build_unittest
  - ioc.build_host
  - app.build_main_cross
  - mcu.build
  - ioc.build_cross
  - app.run_unittest
  - ioc.test_fakedev
  - all.build
  - all.test_host

epics_base.clone:
  stage: epics_base.clone
  script:
    - python3 -u -m manage epics_base.clone
  artifacts:
    paths:
      - target/epics_base_7.0.4.1_src

epics_base.build_host:
  stage: epics_base.build_host
  script:
    - python3 -u -m manage epics_base.build_host
  needs:
    - epics_base.clone
  artifacts:
    paths:
      - target/epics_base_7.0.4.1_host_build
      - target/epics_base_7.0.4.1_host_install

app_toolchain.download:
  stage: app_toolchain.download
  script:
    - python3 -u -m manage app_toolchain.download
  artifacts:
    paths:
      - target/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf

epics_base.build_cross:
  stage: epics_base.build_cross
  script:
    - python3 -u -m manage epics_base.build_cross
  needs:
    - app_toolchain.download
    - epics_base.build_host
  artifacts:
    paths:
      - target/epics_base_7.0.4.1_cross_build
      - target/epics_base_7.0.4.1_cross_install

app.build_fakedev:
  stage: app.build_fakedev
  script:
    - python3 -u -m manage app.build_fakedev
  needs:
    - epics_base.build_host
  artifacts:
    paths:
      - target/app_host

mcu_toolchain.download:
  stage: mcu_toolchain.download
  script:
    - python3 -u -m manage mcu_toolchain.download
  artifacts:
    paths:
      - target/gcc-arm-none-eabi-5_4-2016q3

freertos.clone:
  stage: freertos.clone
  script:
    - python3 -u -m manage freertos.clone
  artifacts:
    paths:
      - target/freertos

app.build_unittest:
  stage: app.build_unittest
  script:
    - python3 -u -m manage app.build_unittest
  artifacts:
    paths:
      - target/app_host

ioc.build_host:
  stage: ioc.build_host
  script:
    - python3 -u -m manage ioc.build_host
  needs:
    - epics_base.build_host
    - app.build_fakedev
  artifacts:
    paths:
      - target/ioc_host_build
      - target/ioc_host_install

app.build_main_cross:
  stage: app.build_main_cross
  script:
    - python3 -u -m manage app.build_main_cross
  needs:
    - app_toolchain.download
    - epics_base.build_cross
  artifacts:
    paths:
      - target/app_cross

mcu.build:
  stage: mcu.build
  script:
    - python3 -u -m manage mcu.build
  needs:
    - mcu_toolchain.download
    - freertos.clone
  artifacts:
    paths:
      - target/mcu

ioc.build_cross:
  stage: ioc.build_cross
  script:
    - python3 -u -m manage ioc.build_cross
  needs:
    - epics_base.build_cross
    - app.build_main_cross
  artifacts:
    paths:
      - target/ioc_cross_build
      - target/ioc_cross_install

app.run_unittest:
  stage: app.run_unittest
  script:
    - python3 -u -m manage app.run_unittest
  needs:
    - app.build_unittest

ioc.test_fakedev:
  stage: ioc.test_fakedev
  script:
    - python3 -u -m manage ioc.test_fakedev
  needs:
    - ioc.build_host

all.build:
  stage: all.build
  script:
    - python3 -u -m manage all.build
  needs:
    - mcu.build
    - epics_base.build_host
    - epics_base.build_cross
    - app.build_unittest
    - app.build_fakedev
    - ioc.build_host
    - ioc.build_cross

all.test_host:
  stage: all.test_host
  script:
    - python3 -u -m manage all.test_host
  needs:
    - app.run_unittest
    - ioc.test_fakedev

